apiVersion: v1
kind: Service
metadata:
  name: analyzer-service
spec:
  type: LoadBalancer  
  ports:
  - port: 80
  selector:
    app: analyzer

---

# Backend: All locations, Here we run image without overriding its entrypoint
apiVersion: apps/v1 # This is fucked up: https://matthewpalmer.net/kubernetes-app-developer/articles/kubernetes-apiversion-definition-guide.html
kind: Deployment # Define what should be made deployment or service. Deployments define the actual pods where services are used for comuncation to the pod 
metadata:
  name: analyzerpod 
  labels: # Label used by the pod template to find what deplyment they are.
    app: analyzer
spec:

  replicas: 1 # How many pods should coexist
  selector: # Defines what pods the deplyment should manage
    matchLabels: # Select the label of the pods that the deployment should manage
      app: analyzer
  template: # Define the template of a pod
    metadata: # Define the metadata of the template pod
      labels: # Define label of template pod
        app: analyzer
    spec: # Define the template to build on: useually a docker image
      containers: 
      - name: analyzer-i # Give the container a name
        image: thinhar/analyzer:0.60 # Which docker image it should be based on
        ports: # Open ports in the containers (this basically just adds an option to the docker run command)
        - containerPort: 80 # Same port as its corresponding load balancer
        # To override the docker entrypoint and keeping the container alive to debug it manually write the commands below:
        # command: ["/usr/bin/amqp-consume --url=amqp://guest:guest@10.0.250.20:5672 -q foo3 -c 1 cat | xargs -I {} sh -c \"/usr/local/blender/blender -b -noaudio {}\""]
        # args: ["-c", "/usr/bin/amqp-consume", "--url=amqp://guest:guest@10.0.196.224:5672", "-q", "foo2", "-c", "1", "cat", "|", "xargs", "-I", "{}", "sh", "-c", "/usr/local/blender/blender -b -noaudio {}"]
        # readinessProbe: # Defines how the load balancer should check if the containers are ready for more traffic
        resources: 
          limits:
            cpu: 150m
          requests:
            cpu: 150m
#          exec:
#            command: # If the file /tmp/ready exists, this succeeds and the container will be marked as not busy
#            - cat
#            - /tmp/ready
#          initialDelaySeconds: 2
#          periodSeconds: 1
        env: # Environment variables for the session, useful for debugging. Source: https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/
        - name: BROKER_URL
          value: amqp://guest:guest@rabbitmq-service:5672
        - name: QUEUE
          value: tasklist
        - name: ENCODERIMAGE
          value: thinhar/encoder:0.47
        - name: TASKMANAGERIMAGE
          value: thinhar/taskmanager:0.08
        - name: ANALYSER_CPU_RESOURCES
          valueFrom:
            resourceFieldRef:
              containerName: analyzer-i
              resource: requests.cpu
              divisor: 1m
        volumeMounts:
        - mountPath: "/home/shared"
          name: volume
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: shared-volume
      serviceAccount: pod-creation-sa
      serviceAccountName: pod-creation-sa
